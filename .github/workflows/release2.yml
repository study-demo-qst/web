name: Create release tag and release note.

on:
  # push:
  #   branches: [ master ]
  workflow_dispatch:
    inputs:
      masterブランチでビルド＆テストを実行(関連リポジトリ含む)。リリースを作成:
        type: boolean
        required: false
        default: true

jobs:
  create-release-tag:
    runs-on: ubuntu-latest
    permissions: write-all

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TZ: 'Asia/Tokyo'

    steps:
      - uses: actions/checkout@v3

      # 前回のリリースタグを取得する
      # - name: Get previous tag
      #   id: pre_tag
      #   run: |
      #     echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"

      # タグを生成する 「{YYYY.MM.DD}-{当日リリース回数}」
      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d.%H.%M.%S')

          # pre_release_date=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $1}')
          # pre_release_count=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $2}')
          # if [[ ! $pre_release_date = $today ]]; then
          #   echo "init count"
          #   pre_release_count=0
          # fi
          # echo "::set-output name=release_tag::$today-$(($pre_release_count + 1))"

          echo "name=$today-$(($pre_release_count + 1))" >> $GITHUB_OUTPUT

      # 前回リリースからの差分をもとに、リリースノートの本文を生成する
      # - name: Generate release note
      #   id: release_note
      #   run: |
      #     echo "::set-output name=release_note::$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{ steps.release_tag.outputs.release_tag }}", "previous_tag_name":"${{ steps.pre_tag.outputs.pre_tag }}"}' | jq .body | sed 's/"//g')"

      # タグを切り、リリースノートを作成する
      # https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#create-a-release
      - name: Create Release
        id: create_release
        run: |
          body=$(echo -e "bbb2\n\
          ccc1\n\
          ddd1")

          echo "body=$body"

          # JSON データをエスケープしてフォーマットする
          json_data=$(jq -n \
                  --arg tag_name ${{ steps.release_tag.outputs.name }} \
                  --arg body "$body" \
                  '{
                    tag_name: $tag_name,
                    draft: true,
                    prerelease: false,
                    body: $body
                  }')

          response=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "$json_data")
          
          upload_url=$(echo "$response" | jq -r .upload_url)
          echo "upload_url=$upload_url"
          formatted_url=$(echo "$upload_url" | sed 's/{?name,label}/?name=example.zip/')
          echo "formatted_url=$formatted_url"
          echo "upload_url=$formatted_url" >> $GITHUB_OUTPUT

      - name: Upload Asset to Release
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            "${{ steps.create_release.outputs.upload_url }}" \
            --data-binary "@example.zip"